name: CI
on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  check_repository:
        name: check_repository
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: is a mirror rÃ©pository
              run: |
                git remote -v | awk '{print $2}' > test.txt
                rep=$(head -n 1 test.txt)
                modified=$(echo "$rep" | sed 's/git@github.com:/https:\/\/github.com\//g')
                modified=$(echo "$rep" | sed 's/https:\/\/github.com\//git@github.com:/g')
                echo "$modified.git"
                if [[ "${modified}.git" == ${{ vars.MIRROR_URL }} ]]
                then
                    exit 1
                else
                    echo "Good repository"
                fi

  backend:
    name: Backend (TypeScript)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: Backend/package-lock.json
      - run: npm ci
      - name: Prisma generate (optional)
        run: |
          if [ -f src/prisma/schema.prisma ]; then npx prisma generate --schema=src/prisma/schema.prisma; fi
      - run: npm run build
      - name: Archive backend dist
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: Backend/dist

  frontend:
    name: Frontend (Vite + Yarn)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Survivor
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: Survivor/yarn.lock
      - run: yarn install --frozen-lockfile || yarn install
      - run: npm install react-is
      - run: yarn build
      - name: Add SPA fallback for GitHub Pages
        run: |
          if [ -d dist ]; then cp dist/index.html dist/404.html; fi
      - name: Archive frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: Survivor/dist
          if-no-files-found: ignore

  push_to_mirror:
      runs-on: ubuntu-latest
      if: github.event_name == 'push'
      needs: [check_repository, backend, frontend]
      steps:
          - name: checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: mirror to epitech repo
            uses: pixta-dev/repository-mirroring-action@v1
            with:
              target_repo_url: ${{ vars.MIRROR_URL }}
              ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
